{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "KatexService",
            "id": "injectable-KatexService-e3b849dbeb300494f9239d2ccad82eab323c73b753d74266237db0c224cfe3013e92fc3f84554cc43c66cd34888e04a013633a1cc293cbc88ff9b0bfd3eea5be",
            "file": "projects/trailblazing/rich-text-ui/src/lib/services/katex.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "render",
                    "args": [
                        {
                            "name": "expression",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "element",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRender an expression string into an HTML element\n",
                    "description": "<p>Render an expression string into an HTML element</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 373,
                                "end": 383,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "expression"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 358,
                                "end": 363,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>the raw content to be rendered</p>\n",
                            "typeExpression": {
                                "pos": 364,
                                "end": 372,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 307,
                                "type": {
                                    "pos": 365,
                                    "end": 371,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 149
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 440,
                                "end": 447,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "element"
                            },
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 421,
                                "end": 426,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>the target element of the rendering</p>\n",
                            "typeExpression": {
                                "pos": 427,
                                "end": 439,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 307,
                                "type": {
                                    "pos": 428,
                                    "end": 438,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 177,
                                    "typeName": {
                                        "pos": 428,
                                        "end": 438,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "ElementRef"
                                    }
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 511,
                                "end": 518,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "options"
                            },
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 490,
                                "end": 495,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>further options for the rendering process</p>\n",
                            "typeExpression": {
                                "pos": 496,
                                "end": 510,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 307,
                                "type": {
                                    "pos": 497,
                                    "end": 509,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 177,
                                    "typeName": {
                                        "pos": 497,
                                        "end": 509,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "KatexOptions"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "name": "renderToString",
                    "args": [
                        {
                            "name": "expression",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRender an expression string to an HTML string\n",
                    "description": "<p>Render an expression string to an HTML string</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 794,
                                "end": 804,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "expression"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 779,
                                "end": 784,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>the raw content to be rendered</p>\n",
                            "typeExpression": {
                                "pos": 785,
                                "end": 793,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 307,
                                "type": {
                                    "pos": 786,
                                    "end": 792,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 149
                                }
                            }
                        },
                        {
                            "name": {
                                "pos": 863,
                                "end": 870,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "options"
                            },
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 842,
                                "end": 847,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>further options for the rendering process</p>\n",
                            "typeExpression": {
                                "pos": 848,
                                "end": 862,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 307,
                                "type": {
                                    "pos": 849,
                                    "end": 861,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 177,
                                    "typeName": {
                                        "pos": 849,
                                        "end": 861,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "KatexOptions"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 919,
                                "end": 925,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 105,
                                "escapedText": "return"
                            },
                            "comment": "<p>result of the rendering</p>\n",
                            "returnType": "string"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>An Angular service wrapping the Katex rendering functions</p>\n",
            "rawdescription": "\n\nAn Angular service wrapping the Katex rendering functions\n",
            "sourceCode": "import { ElementRef, Injectable } from '@angular/core';\nimport { render as katexRender, renderToString as katexRenderToString, KatexOptions } from 'katex';\n\n/**\n * An Angular service wrapping the Katex rendering functions\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class KatexService {\n  /**\n   * Render an expression string into an HTML element\n   * @param {string} expression the raw content to be rendered\n   * @param {ElementRef} element the target element of the rendering\n   * @param {KatexOptions} options further options for the rendering process\n   */\n  render(expression: string, element: ElementRef, options?: KatexOptions) {\n    return katexRender(expression, element.nativeElement, options);\n  }\n\n  /**\n   * Render an expression string to an HTML string\n   * @param {string} expression the raw content to be rendered\n   * @param {KatexOptions} options further options for the rendering process\n   * @return {string} result of the rendering\n   */\n  renderToString(expression: string, options?: KatexOptions): string {\n    return katexRenderToString(expression, options);\n  }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "KatexDirective",
            "id": "directive-KatexDirective-403accef3cb4f2764c4f172a8a22c59008d1c856a8acfe6e926bda78edf784602500920b61088911845f434d6ceda3b5379611e4d0d01a0fcde51409231bd5cd",
            "file": "projects/trailblazing/rich-text-ui/src/lib/directives/katex.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Input, Output, ElementRef, OnChanges } from '@angular/core';\nimport { KatexOptions } from 'katex';\nimport { KatexService } from \"../services/katex.service\";\n\n@Directive({\n  selector: '[katex]',\n})\nexport class KatexDirective implements OnChanges {\n\n  /**\n   * The default options for the rendering\n   * @private\n   */\n  private defaultOptions: KatexOptions = { output: 'html' };\n\n  /**\n   * The raw content of the expression\n   */\n  @Input() expression: string = '';\n\n  /**\n   * The additional options for the rendering\n   */\n  @Input() options?: any = undefined;\n\n  /**\n   * Enable the debug mode in which errors will be rendered directly to the destination\n   */\n  @Input() debug: boolean = false;\n\n  /**\n   * The event that will be emitted to the parent component in case of errors\n   */\n  @Output() error = new EventEmitter<any>();\n\n  /**\n   *\n   * @param {ElementRef} el the target element (injected)\n   * @param {KatexService} service the katex service (injected)\n   */\n  constructor(private el: ElementRef, private service: KatexService) { }\n\n  /**\n   * The internal processing on changes\n   */\n  ngOnChanges() {\n    try {\n      this.el.nativeElement.classList.remove('has-error');\n      this.service.render(this.expression, this.el, {...this.defaultOptions, ...this.options});\n    } catch (err: any) {\n      if (this.debug) {\n        this.el.nativeElement.classList.add('has-error');\n        this.el.nativeElement.innerText = err.toString();\n      }\n      this.error.emit(err);\n    }\n  }\n}\n",
            "selector": "[katex]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnable the debug mode in which errors will be rendered directly to the destination\n",
                    "description": "<p>Enable the debug mode in which errors will be rendered directly to the destination</p>\n",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "expression",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe raw content of the expression\n",
                    "description": "<p>The raw content of the expression</p>\n",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe additional options for the rendering\n",
                    "description": "<p>The additional options for the rendering</p>\n",
                    "line": 24,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe event that will be emitted to the parent component in case of errors\n",
                    "description": "<p>The event that will be emitted to the parent component in case of errors</p>\n",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{ output: 'html' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KatexOptions",
                    "optional": false,
                    "description": "<p>The default options for the rendering</p>\n",
                    "line": 14,
                    "rawdescription": "\n\nThe default options for the rendering\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "pos": 337,
                            "end": 349,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 332,
                            "tagName": {
                                "pos": 338,
                                "end": 345,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 121,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe internal processing on changes\n",
                    "description": "<p>The internal processing on changes</p>\n"
                }
            ],
            "implements": [
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "KatexService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "rawdescription": "\n\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 907,
                            "end": 909,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "el"
                        },
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 888,
                            "end": 893,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>the target element (injected)</p>\n",
                        "typeExpression": {
                            "pos": 894,
                            "end": 906,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 307,
                            "type": {
                                "pos": 895,
                                "end": 905,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 177,
                                "typeName": {
                                    "pos": 895,
                                    "end": 905,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "ElementRef"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 967,
                            "end": 974,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "service"
                        },
                        "type": "KatexService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 946,
                            "end": 951,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>the katex service (injected)</p>\n",
                        "typeExpression": {
                            "pos": 952,
                            "end": 966,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 307,
                            "type": {
                                "pos": 953,
                                "end": 965,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 177,
                                "typeName": {
                                    "pos": 953,
                                    "end": 965,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "KatexService"
                                }
                            }
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9cb6b01a4ad6591225d0d028f4143d0b852d1b9cbcfdd14cdb5affe5dcb6686102355bd9670ab1f611d6154d4de208f5521ab2c1a5d6777bc3a47c80498eeb31",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'trailblazing-ui'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'trailblazing-ui';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<nt-expression [options]=\"{ output: 'htmlAndMathml' }\" [content]=\"'x^2'\"></nt-expression>\n\n\n<nt-paragraph content=\"This is an expression $3^x$. Let's get started!\"></nt-paragraph>\n"
        },
        {
            "name": "ExpressionComponent",
            "id": "component-ExpressionComponent-cab61cf52b3c3c738d4a46faeb60965d47682f315033e87fb7b562bd949951f0c85692d963acb96c89dbeaecd8be029336ef32f1fddee73ddfc4e8575a970381",
            "file": "projects/trailblazing/rich-text-ui/src/lib/expression/expression.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nt-expression",
            "styleUrls": [
                "./expression.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./expression.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe content of the expression, excluding the delimiters such as `$`, `$$`, `\\(`, `\\)`, `\\[` and `\\]`.\n",
                    "description": "<p>The content of the expression, excluding the delimiters such as <code>$</code>, <code>$$</code>, <code>\\(</code>, <code>\\)</code>, <code>\\[</code> and <code>\\]</code>.</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnabling debug mode in which the error message will be printed out in case of math syntax errors\n",
                    "description": "<p>Enabling debug mode in which the error message will be printed out in case of math syntax errors</p>\n",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe options for rendering the expression\n",
                    "description": "<p>The options for rendering the expression</p>\n",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe event that will be emitted in case of errors\n",
                    "description": "<p>The event that will be emitted in case of errors</p>\n",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{ output: 'html', displayMode: false }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "<p>The default options for expression rendering</p>\n",
                    "line": 17,
                    "rawdescription": "\n\nThe default options for expression rendering\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "onError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe internal error handler of the expression. This handler will emit an event to parent component\n",
                    "description": "<p>The internal error handler of the expression. This handler will emit an event to parent component</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1146,
                                "end": 1151,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "error"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1140,
                                "end": 1145,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>describe the error in details with <code>toString</code></p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>This is mathematical expression component.\nThe expression could be either inline within a paragraph or separated as a new paragraph</p>\n",
            "rawdescription": "\n\nThis is mathematical expression component.\nThe expression could be either inline within a paragraph or separated as a new paragraph\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, } from '@angular/core';\n\n/**\n * This is mathematical expression component.\n * The expression could be either inline within a paragraph or separated as a new paragraph\n */\n@Component({\n  selector: 'nt-expression',\n  templateUrl: './expression.component.html',\n  styleUrls: [ './expression.component.css' ],\n})\nexport class ExpressionComponent  {\n\n  /**\n   * The default options for expression rendering\n   */\n  defaultOptions: any = { output: 'html', displayMode: false };\n\n  /**\n   * The content of the expression, excluding the delimiters such as `$`, `$$`, `\\(`, `\\)`, `\\[` and `\\]`.\n   */\n  @Input() content: string = '';\n\n  /**\n   * The options for rendering the expression\n   */\n  @Input() options?: any = undefined;\n\n  /**\n   * Enabling debug mode in which the error message will be printed out in case of math syntax errors\n   */\n  @Input() debug = false;\n\n  /**\n   * The event that will be emitted in case of errors\n   */\n  @Output() error = new EventEmitter<any>();\n\n  /**\n   * The internal error handler of the expression. This handler will emit an event to parent component\n   * @param error describe the error in details with `toString`\n   */\n  onError(error: any) {\n    this.error.emit(error);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.nt-expression {\n}\n",
                    "styleUrl": "./expression.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"nt-expression\"\n      katex [options]=\"options || defaultOptions\"\n      (error)=\"onError($event)\" [expression]=\"content\" [debug]=\"debug\"></span>\n"
        },
        {
            "name": "ParagraphComponent",
            "id": "component-ParagraphComponent-7749dc0d14a4c822c772819f43172e9035c82e354edcd4653ce066072529f4ecb01f897bb88581ee2bead44bc3c7c6dac1923a040a20aa6fee954624f62bd2eb",
            "file": "projects/trailblazing/rich-text-ui/src/lib/paragraph/paragraph.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nt-paragraph",
            "styleUrls": [
                "./paragraph.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./paragraph.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe raw content of the paragraph\n",
                    "description": "<p>The raw content of the paragraph</p>\n",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnabling debug mode in which the error message will be printed out in case of math syntax errors\n",
                    "description": "<p>Enabling debug mode in which the error message will be printed out in case of math syntax errors</p>\n",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe event that will be emitted in case of errors\n",
                    "description": "<p>The event that will be emitted in case of errors</p>\n",
                    "line": 32,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chunks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "<p>The internal chunks extracted from the content</p>\n",
                    "line": 17,
                    "rawdescription": "\n\nThe internal chunks extracted from the content\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThe internal processing of property changes\n",
                    "description": "<p>The internal processing of property changes</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>This is a rich paragraph which may contain mathematical expressions, image, text, and so on.</p>\n",
            "rawdescription": "\n\nThis is a rich paragraph which may contain mathematical expressions, image, text, and so on.\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { extractMath } from \"extract-math\";\n\n/**\n * This is a rich paragraph which may contain mathematical expressions, image, text, and so on.\n */\n@Component({\n  selector: 'nt-paragraph',\n  templateUrl: './paragraph.component.html',\n  styleUrls: ['./paragraph.component.css']\n})\nexport class ParagraphComponent implements OnChanges {\n\n  /**\n   * The internal chunks extracted from the content\n   */\n  chunks: any[] = [];\n\n  /**\n   * The raw content of the paragraph\n   */\n  @Input() content: string = '';\n\n  /**\n   * Enabling debug mode in which the error message will be printed out in case of math syntax errors\n   */\n  @Input() debug: boolean = false;\n\n  /**\n   * The event that will be emitted in case of errors\n   */\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * The internal processing of property changes\n   */\n  ngOnChanges(): void {\n    this.chunks = extractMath(this.content);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nt-paragraph {\n}\n",
                    "styleUrl": "./paragraph.component.css"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!!chunks && chunks.length > 0;\">\n  <p class=\"nt-paragraph\">\n    <ng-container *ngFor=\"let chunk of chunks; first as start; last as end;\">\n        <nt-expression *ngIf=\"chunk.math; else text\" [content]=\"chunk.raw\"\n                       [options]=\"{ displayMode: chunk.type === 'display' }\">\n        </nt-expression>\n      <ng-template #text>{{ chunk.raw }}</ng-template>\n    </ng-container>\n  </p>\n</ng-container>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6ce1b3322bac0098e7a217f9f7db75826e60b25ba601569d99ab44717637292d02d9d81e20a95c1eaa82a41123490a80c69584fcc6fc44aa5104f9c8cced9f07",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RichTextUiModule } from \"@trailblazing/rich-text-ui\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RichTextUiModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "RichTextUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RichTextUiModule",
            "id": "module-RichTextUiModule-64e049310d6ebb5409a159b026a14feb8a6ceae03d406d976a30307d5acfb4439619242be1f2f956e59bdd34752988cb00d7b2192d61092c07abd70caa8c0d76",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/trailblazing/rich-text-ui/src/lib/rich-text-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { KatexService } from \"./services/katex.service\";\nimport { KatexDirective } from \"./directives/katex.directive\";\nimport { ExpressionComponent } from \"./expression/expression.component\";\nimport { ParagraphComponent } from \"./paragraph/paragraph.component\";\n\n\n\n@NgModule({\n  declarations: [\n    KatexDirective,\n    ExpressionComponent,\n    ParagraphComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    KatexService\n  ],\n  exports: [\n    ExpressionComponent,\n    ParagraphComponent\n  ]\n})\nexport class RichTextUiModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "KatexService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExpressionComponent"
                        },
                        {
                            "name": "KatexDirective"
                        },
                        {
                            "name": "ParagraphComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExpressionComponent"
                        },
                        {
                            "name": "ParagraphComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DisplayWithLeftTag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "InlineExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NormalDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpressionComponent>",
                "defaultValue": "(args: ExpressionComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ParagraphComponent>",
                "defaultValue": "(args: ParagraphComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "WithDebug",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithDisplayExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithEndingExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithInlineExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLeadingExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/trailblazing/rich-text-ui/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/stories/rich-text/expression.stories.ts": [
                {
                    "name": "DisplayWithLeftTag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InlineExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NormalDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpressionComponent>",
                    "defaultValue": "(args: ExpressionComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithDebug",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/stories/rich-text/paragraph.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ParagraphComponent>",
                    "defaultValue": "(args: ParagraphComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithDisplayExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithEndingExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithInlineExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithLeadingExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 16,
        "status": "low",
        "files": [
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/directives/katex.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "KatexDirective",
                "coveragePercent": 75,
                "coverageCount": "6/8",
                "status": "good"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/expression/expression.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpressionComponent",
                "coveragePercent": 100,
                "coverageCount": "7/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/paragraph/paragraph.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParagraphComponent",
                "coveragePercent": 100,
                "coverageCount": "6/6",
                "status": "very-good"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/services/katex.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "KatexService",
                "coveragePercent": 100,
                "coverageCount": "3/3",
                "status": "very-good"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisplayWithLeftTag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InlineExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NormalDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDebug",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisplayExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithEndingExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInlineExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLeadingExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}