{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "KatexService",
            "id": "injectable-KatexService-13b63560edf7e914f8dfb967c6dde7f55a84741d4b4d7451c3d968f485ae6b35b7da0377e8c2d3cbe898c8e1e5d3a0d19272a6a6fb0410e3efafd8fba6bf23db",
            "file": "projects/trailblazing/rich-text-ui/src/lib/services/katex.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "render",
                    "args": [
                        {
                            "name": "expression",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "element",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "expression",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "element",
                            "type": "ElementRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "renderToString",
                    "args": [
                        {
                            "name": "expression",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "expression",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "KatexOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ElementRef, Injectable } from '@angular/core';\nimport { render as katexRender, renderToString as katexRenderToString, KatexOptions } from 'katex';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KatexService {\n  render(expression: string, element: ElementRef, options?: KatexOptions) {\n    return katexRender(expression, element.nativeElement, options);\n  }\n\n  renderToString(expression: string, options?: KatexOptions) {\n    return katexRenderToString(expression, options);\n  }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "KatexDirective",
            "id": "directive-KatexDirective-8b6843f92513af2173f3737f54a3544dd109d1583fe9f9360fe0aeac027b10da3d050b56bf202386241d578c23ab56b9625c14a0c6d511ac23227388674efe23",
            "file": "projects/trailblazing/rich-text-ui/src/lib/directives/katex.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, Input, Output, ElementRef, OnChanges } from '@angular/core';\nimport { KatexOptions } from 'katex';\nimport { KatexService } from \"../services/katex.service\";\n\n@Directive({\n  selector: '[katex]',\n})\nexport class KatexDirective implements OnChanges {\n\n  private defaultOptions: KatexOptions = { output: 'html' };\n  @Input() expression: string = '';\n  @Input() options?: any = undefined;\n  @Input() debug: boolean = false;\n  @Output() error = new EventEmitter<any>();\n\n  constructor(private el: ElementRef, private service: KatexService) { }\n\n  ngOnChanges() {\n    try {\n      this.el.nativeElement.classList.remove('has-error');\n      this.service.render(this.expression, this.el, {...this.defaultOptions, ...this.options});\n    } catch (err: any) {\n      if (this.debug) {\n        this.el.nativeElement.classList.add('has-error');\n        this.el.nativeElement.innerText = err.toString();\n      }\n      this.error.emit(err);\n    }\n  }\n}\n",
            "selector": "[katex]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "expression",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{ output: 'html' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KatexOptions",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "KatexService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "KatexService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9cb6b01a4ad6591225d0d028f4143d0b852d1b9cbcfdd14cdb5affe5dcb6686102355bd9670ab1f611d6154d4de208f5521ab2c1a5d6777bc3a47c80498eeb31",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'trailblazing-ui'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'trailblazing-ui';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<nt-expression [options]=\"{ output: 'htmlAndMathml' }\" [content]=\"'x^2'\"></nt-expression>\n\n\n<nt-paragraph content=\"This is an expression $3^x$. Let's get started!\"></nt-paragraph>\n"
        },
        {
            "name": "ExpressionComponent",
            "id": "component-ExpressionComponent-15fd704c761be7435bee25e66bf291e7c1a332809438c3f1428ac192ac5ba59e17c31006725c4c243f53761376be2a609957cad3832525edc948e7025a6ffda3",
            "file": "projects/trailblazing/rich-text-ui/src/lib/expression/expression.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nt-expression",
            "styleUrls": [
                "./expression.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./expression.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<any>(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{ output: 'html' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, } from '@angular/core';\n\n@Component({\n  selector: 'nt-expression',\n  templateUrl: './expression.component.html',\n  styleUrls: [ './expression.component.css' ],\n})\nexport class ExpressionComponent  {\n\n  defaultOptions: any = { output: 'html' };\n\n  @Input() content: string = '';\n  @Input() options?: any = undefined;\n  @Input() debug = false;\n  @Output() error = new EventEmitter<any>(true);\n\n  onError(error: any) {\n    this.error.emit(error);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.nt-expression {\n}\n",
                    "styleUrl": "./expression.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"nt-expression\"\n      katex [options]=\"options || defaultOptions\"\n      (error)=\"onError($event)\" [expression]=\"content\" [debug]=\"debug\"></span>\n"
        },
        {
            "name": "ParagraphComponent",
            "id": "component-ParagraphComponent-f516b8098eee42eb512e32cb7fa7d83ec2148b03a2323bb8d618891c98be720789c7431a65f48374c488635f3fe725b85f214d3a6cd535587f76bbfd7997ac2b",
            "file": "projects/trailblazing/rich-text-ui/src/lib/paragraph/paragraph.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "nt-paragraph",
            "styleUrls": [
                "./paragraph.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./paragraph.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "error",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chunks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { extractMath, Segment } from \"extract-math\";\n\n@Component({\n  selector: 'nt-paragraph',\n  templateUrl: './paragraph.component.html',\n  styleUrls: ['./paragraph.component.css']\n})\nexport class ParagraphComponent implements OnChanges {\n\n  chunks: Segment[] = [];\n  @Input() content: string = '';\n  @Input() debug: boolean = false;\n  @Output() error: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.chunks = extractMath(this.content);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nt-paragraph {\n}\n",
                    "styleUrl": "./paragraph.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<ng-container *ngIf=\"!!chunks && chunks.length > 0;\">\n  <p class=\"nt-paragraph\">\n    <ng-container *ngFor=\"let chunk of chunks; first as start; last as end;\">\n        <nt-expression *ngIf=\"chunk.math; else text\" [content]=\"chunk.raw\"\n                       [options]=\"{ displayMode: chunk.type === 'display' }\">\n        </nt-expression>\n      <ng-template #text>{{ chunk.raw }}</ng-template>\n    </ng-container>\n  </p>\n</ng-container>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6ce1b3322bac0098e7a217f9f7db75826e60b25ba601569d99ab44717637292d02d9d81e20a95c1eaa82a41123490a80c69584fcc6fc44aa5104f9c8cced9f07",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RichTextUiModule } from \"@trailblazing/rich-text-ui\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RichTextUiModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "RichTextUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RichTextUiModule",
            "id": "module-RichTextUiModule-64e049310d6ebb5409a159b026a14feb8a6ceae03d406d976a30307d5acfb4439619242be1f2f956e59bdd34752988cb00d7b2192d61092c07abd70caa8c0d76",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/trailblazing/rich-text-ui/src/lib/rich-text-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { KatexService } from \"./services/katex.service\";\nimport { KatexDirective } from \"./directives/katex.directive\";\nimport { ExpressionComponent } from \"./expression/expression.component\";\nimport { ParagraphComponent } from \"./paragraph/paragraph.component\";\n\n\n\n@NgModule({\n  declarations: [\n    KatexDirective,\n    ExpressionComponent,\n    ParagraphComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    KatexService\n  ],\n  exports: [\n    ExpressionComponent,\n    ParagraphComponent\n  ]\n})\nexport class RichTextUiModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "KatexService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExpressionComponent"
                        },
                        {
                            "name": "KatexDirective"
                        },
                        {
                            "name": "ParagraphComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExpressionComponent"
                        },
                        {
                            "name": "ParagraphComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DisplayWithLeftTag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "InlineExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LeftDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NormalDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpressionComponent>",
                "defaultValue": "(args: ExpressionComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ParagraphComponent>",
                "defaultValue": "(args: ParagraphComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "WithDebug",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithDisplayExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithEndingExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/expression.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithInlineExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLeadingExpression",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/rich-text/paragraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/trailblazing/rich-text-ui/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/trailblazing/rich-text-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/stories/rich-text/expression.stories.ts": [
                {
                    "name": "DisplayWithLeftTag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InlineExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LeftDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NormalDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpressionComponent>",
                    "defaultValue": "(args: ExpressionComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithDebug",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/expression.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/rich-text/paragraph.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ParagraphComponent>",
                    "defaultValue": "(args: ParagraphComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithDisplayExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithEndingExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithInlineExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithLeadingExpression",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/rich-text/paragraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/directives/katex.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "KatexDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/expression/expression.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpressionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/paragraph/paragraph.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ParagraphComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/lib/services/katex.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "KatexService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/trailblazing/rich-text-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisplayWithLeftTag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InlineExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NormalDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDebug",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/expression.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithDisplayExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithEndingExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInlineExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/rich-text/paragraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLeadingExpression",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}